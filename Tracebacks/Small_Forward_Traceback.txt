PS D:\Program Files\GitHub\CS170-P2-NearestNeighbor> python main.py
Welcome to Niko Udria's Feature Selection Algorithm.
Type in the name of the file to test : CS170_Small_Data__12.txt
Type the number of the algorithm you want to run.
        1) Forward Selection
        2) Backward Elimination
1

This dataset has 6 features (not including the class attribute), with 500 instances.

Running nearest neighbor with all 6 features, using "leaving-one-out" evaluation, I get an accuracy of 81.6%

Beginning search. 

        Using feature(s) [1] accuracy is 76.2%
        Using feature(s) [2] accuracy is 75.8%
        Using feature(s) [3] accuracy is 76.0%
        Using feature(s) [4] accuracy is 78.2%
        Using feature(s) [5] accuracy is 84.2%
        Using feature(s) [6] accuracy is 79.0%

Feature set [5] was best, accuracy is 84.2%

        Using feature(s) [5, 1] accuracy is 83.4%
        Using feature(s) [5, 2] accuracy is 96.2%
        Using feature(s) [5, 3] accuracy is 82.0%
        Using feature(s) [5, 4] accuracy is 83.4%
        Using feature(s) [5, 6] accuracy is 87.4%

Feature set [5, 2] was best, accuracy is 96.2%

        Using feature(s) [5, 2, 1] accuracy is 93.4%
        Using feature(s) [5, 2, 3] accuracy is 90.0%
        Using feature(s) [5, 2, 4] accuracy is 91.2%
        Using feature(s) [5, 2, 6] accuracy is 91.6%

(Warning, Accuracy has decreased! Continuing search in case of local maxima)
Feature set [5, 2, 1] was best, accuracy is 93.4%

        Using feature(s) [5, 2, 1, 3] accuracy is 90.0%
        Using feature(s) [5, 2, 1, 4] accuracy is 88.8%
        Using feature(s) [5, 2, 1, 6] accuracy is 87.8%

(Warning, Accuracy has decreased! Continuing search in case of local maxima)
Feature set [5, 2, 1, 3] was best, accuracy is 90.0%

        Using feature(s) [5, 2, 1, 3, 4] accuracy is 83.2%
        Using feature(s) [5, 2, 1, 3, 6] accuracy is 86.4%

(Warning, Accuracy has decreased! Continuing search in case of local maxima)
Feature set [5, 2, 1, 3, 6] was best, accuracy is 86.4%

        Using feature(s) [5, 2, 1, 3, 6, 4] accuracy is 81.6%

(Warning, Accuracy has decreased! Continuing search in case of local maxima)
Feature set [5, 2, 1, 3, 6, 4] was best, accuracy is 81.6%

Finished search!! The best feature subset is [5, 2], which has an accuracy of 96.2%
Elapsed Time: 15 seconds